
Python Fundamentals
    variables
        -location in memory that contains value
        -store of information
        -case sensitive, can be overwritten
        -examples
            1)
            x = 1, y = "one", z = 1.0, X = x+x, interface = "wlan0"
            x, y = 10 , 12

    functions
        -take input and give output after preforming operations
        -given the same input the same output will be generated
        -can be user defined, built into the standard library, or imported from modules
            when a function is attached to an object derived from a class it is considered a method
            not all functions are methods but all methods are functions
            consider methods as class functions
        -provides reuse-ability
        -see functional programing paradigm
        -examples
            1)
            def my_function(x):
                y = x + x
                return y
            2)
            class vehicle:
                def __init__(self,color):
                    self.color=color
                def start(self):
                    print("Starting engine")
                def showcolor(self):
                    print(f"I am {self.color}"
                car=vehicle('black')
                car.start() # <--- method( function belonging to class vehicle )

    list
        -contains multiple elements, able to be indexed through
        - how_to_define_a_list = ["simply", "use", "brackets", "with", "elements", "separated", "by", "comma"]
        - list_of_many_types = ["element", 1, 1.0, true]
        -example
            1)
            simple_list = [1, 2, 3, "one"]
            print(simple_list[-1])

    conditionals
        -used to create logical flow within a  program
        -cause-effect relation ship
        -if, else, elif, switch-case(dictionary+function)
        -examples
            1)
            if x > y:
                print("x is greater then y")
            elif y > x:
                print("y is greater then x")
            elif y == x:
                equals(y, x)
            else:
                print("something else")
            2)
            if x > y:
                if x > z:
                    print("x is the greatest of all")
            ect..
            3)def week(i):
                switcher={
                        0:'Sunday',
                        1:'Monday',
                        2:'Tuesday',
                        3:'Wednesday',
                        4:'Thursday',
                        5:'Friday',
                        6:'Saturday'
                    }
                return switcher.get(i,"Invalid day of week")




















